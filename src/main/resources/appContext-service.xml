<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/context
     http://www.springframework.org/schema/context/spring-context-3.0.xsd
	 http://www.springframework.org/schema/task 
     http://www.springframework.org/schema/task/spring-task-3.0.xsd">

 	<task:annotation-driven scheduler="dropboxScheduler"/> 
	<task:scheduler id="dropboxScheduler" pool-size="60"/>
     
	<task:scheduled-tasks scheduler="dropboxScheduler">
    	<task:scheduled ref="dropboxDirectoryScheduler" method="processRemote" fixed-rate="60000"/>
    	<task:scheduled ref="dropboxDirectoryScheduler" method="processLocal" fixed-delay="20000"/>
	</task:scheduled-tasks>
      
	<bean id="dropboxDirectoryScheduler" class="org.integration.connectors.dropbox.directory.DropboxDirectoryCheckShceduler">
     	<property name="remoteExecutor" ref="dropboxDirectoryAsyncExecutor"/>
     	<property name="accountService" ref="dropboxAccountService"/>
     	<property name="directoryService" ref="dropboxDirectoryService"/>
     	<property name="limitRemote" value="100"/>
     	<property name="limitLocal" value="20"/>
     </bean>
     
     <bean id="dropboxDirectoryAsyncExecutor" class="org.integration.connectors.dropbox.directory.DropboxDirectoryAsyncExecutor">
     	<property name="fileService" ref="dropboxFileService"/>
     	<property name="directoryService" ref="dropboxDirectoryService"/>
     	<property name="tradeshiftService" ref="dropboxTsConnectorService"/>
     	<property name="dispatchResultAsyncExecutor" ref="dropboxDocumentFileDispatchResultAsyncExecutor"/>
     </bean>
     
     <bean id="dropboxDocumentFileDispatchResultAsyncExecutor" class="org.integration.connectors.dropbox.files.DropboxDocumentFileDispatchResultExecutor">
     	<property name="fileService" ref="dropboxFileService"/>
     	<property name="tradeshiftService" ref="dropboxTsConnectorService"/>
     	<property name="logService" ref="fileTransferLogService"/>
     	<property name="dispatchStatusTimeout" value="30000"/>
     </bean>

	<bean id="documentFactory" class="org.integration.connectors.tradeshift.document.DocumentFactory" />

	<bean id="documentService" class="org.integration.connectors.tradeshift.document.DocumentService" >
		<property name="documentFactory" ref="documentFactory"/>
		<property name="tradeshiftApiService" ref="ws.tradeshift.service"/>
	</bean>
	
	<bean id="dropboxTsConnectorService" class="org.integration.connectors.dropbox.TradeshiftConnectorService" >
		<property name="tradeshiftApiService" ref="ws.tradeshift.service"/>
		<property name="logService" ref="fileTransferLogService"/>
	</bean>
	
	<bean id="dropboxAuthorisationService" class="org.integration.connectors.dropbox.security.DropboxAuthorisationService">
		<property name="oauthManager" ref="ws.dropbox.authorizationManager"/>
	</bean>
	
	<bean id="dropboxAccountService" class="org.integration.connectors.dropbox.account.DropboxAccountService">
		<constructor-arg name="apiService" ref="ws.dropbox.service"/>
		<constructor-arg name="accountDao" ref="dropboxAccountDao"/>
	</bean>
	
	<bean id="dropboxFileService" class="org.integration.connectors.dropbox.files.DropboxFileService">
		<constructor-arg name="fileDao" ref="dropboxFileDao"/>
		<constructor-arg name="apiService" ref="ws.dropbox.service"/>
		<property name="logService" ref="fileTransferLogService"/>
		<property name="root" value="${dropbox.files.root}"/>
	</bean>
	
	<bean id="dropboxDirectoryService" class="org.integration.connectors.dropbox.directory.DropboxDirectoryService">
		<constructor-arg name="directoryDao" ref="dropboxDirectoryDao"/>
	</bean>
	
	<bean id="tradeshiftAccountService" class="org.integration.connectors.tradeshift.account.TradeshiftAccountService">
		<constructor-arg name="apiService" ref="ws.tradeshift.service"/>
		<constructor-arg name="accountDao" ref="tradeshiftAccountDao"/>
	</bean>
	
	<bean id="tradeshiftSecurityService" class="org.integration.connectors.tradeshift.security.TradeshiftSecurityService">
		<constructor-arg name="creadentialStorage" ref="tsCredentialsStorage"/>
	</bean>
	
	<bean id="fileTransferLogService" class="org.integration.connectors.log.FileTransferLogService">
		<constructor-arg name="logDao" ref="fileTransferLogDao"/>
	</bean>
</beans>
