<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

    <display-name>Payments Server API</display-name>

    <session-config>
        <session-timeout>5</session-timeout>
    </session-config>

    <!-- ### Context params ### -->
    <context-param>
        <description>The context params that read by ContextLoaderListener</description>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:/root-context.xml</param-value>
    </context-param>
    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>payments-server-api</param-value>
    </context-param>
    <!--
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:/log4j.xml</param-value>
    </context-param>
    -->

    <!-- ### Listeners ### -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <!--
    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>
    -->
    <listener>
        <description>Application context listener to set global JSP variables.</description>
        <listener-class>org.integration.payments.server.ui.context.ApplicationListener</listener-class>
    </listener>

    <!-- ### Filters ### -->
    <filter>
        <filter-name>charsetFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter>
        <filter-name>requestLoggingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CommonsRequestLoggingFilter</filter-class>
        <init-param>
            <param-name>includeQueryString</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>includeClientInfo</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>includePayload</param-name>
            <param-value>false</param-value>
        </init-param>
    </filter>
    <!-- required to enable Spring 3.0 REST support -->
    <filter>
        <filter-name>httpMethodFilter</filter-name>
        <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>charsetFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>requestLoggingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>httpMethodFilter</filter-name>
        <servlet-name>paymentsServerApi</servlet-name>
    </filter-mapping>

    <!-- ### Servlets ### -->
    <servlet>
        <servlet-name>paymentsServerApi</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:/appContext-web.xml</param-value>
        </init-param>
    </servlet>
    <!--
    http://stackoverflow.com/questions/1266303/no-mapping-found-for-http-request-with-uri-web-inf-pages-apiform-jsp

    1. When you set the url-pattern to /* then all requests will be sent to that DispatcherServlet, 
    which includes the request for JSP rendering. 
    Though it's not true, it's sometimes useful to think of the InternalResourceView (and derived like JstlView) as another HTTP request, 
    since that way you'll see why a request for the JSP is getting picked up by the DispatcherServlet.
    2. <url-pattern>/</url-pattern> only matches the URL host/servlet <url-pattern>/*</url-pattern> 
    matches everything under host/servlet, such as /index.html, /foo.jpg and, most importantly in this case, 
    /WEB-INF/pages/apiForm.jsp the * is the wildcard, which says "anything" In the earlier suggestion, 
    *.do matches anything that ends in .do, for example, /foo.do, /foo/bar.do. 
    It doesn't match anything ending in jsp, so a request for /WEB-INF/pages/apiFrom.jsp is not matched, 
    and is not routed to the DispatcherServlet
    -->
    <servlet-mapping>
        <servlet-name>paymentsServerApi</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
</web-app>
